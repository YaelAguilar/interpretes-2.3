
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSEQ FOR ID LBRACE LE LPAREN NUMBER PLUS PRINTLN RBRACE RPAREN SEMIstatement : FOR LPAREN assignment SEMI condition SEMI increment RPAREN blockassignment : ID EQ expressioncondition : expression LE expressionincrement : ID PLUS PLUSexpression : ID\n                  | NUMBERblock : LBRACE statements RBRACEstatements : statement\n                  | statements statementstatement : PRINTLN LPAREN expression RPAREN SEMI'
    
_lr_action_items = {'FOR':([0,17,25,26,28,29,30,31,],[2,-10,-1,2,2,-8,-7,-9,]),'PRINTLN':([0,17,25,26,28,29,30,31,],[3,-10,-1,3,3,-8,-7,-9,]),'$end':([1,17,25,30,],[0,-10,-1,-7,]),'LPAREN':([2,3,],[4,5,]),'ID':([4,5,11,12,18,19,],[7,9,9,9,21,9,]),'NUMBER':([5,11,12,19,],[10,10,10,10,]),'SEMI':([6,9,10,13,14,16,22,],[11,-5,-6,17,18,-2,-3,]),'EQ':([7,],[12,]),'RPAREN':([8,9,10,20,27,],[13,-5,-6,23,-4,]),'LE':([9,10,15,],[-5,-6,19,]),'RBRACE':([17,25,28,29,30,31,],[-10,-1,30,-8,-7,-9,]),'PLUS':([21,24,],[24,27,]),'LBRACE':([23,],[26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,26,28,],[1,29,31,]),'assignment':([4,],[6,]),'expression':([5,11,12,19,],[8,15,16,22,]),'condition':([11,],[14,]),'increment':([18,],[20,]),'block':([23,],[25,]),'statements':([26,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> FOR LPAREN assignment SEMI condition SEMI increment RPAREN block','statement',9,'p_statement_for','my_parser.py',11),
  ('assignment -> ID EQ expression','assignment',3,'p_assignment','my_parser.py',15),
  ('condition -> expression LE expression','condition',3,'p_condition','my_parser.py',19),
  ('increment -> ID PLUS PLUS','increment',3,'p_increment','my_parser.py',23),
  ('expression -> ID','expression',1,'p_expression','my_parser.py',27),
  ('expression -> NUMBER','expression',1,'p_expression','my_parser.py',28),
  ('block -> LBRACE statements RBRACE','block',3,'p_block','my_parser.py',32),
  ('statements -> statement','statements',1,'p_statements','my_parser.py',36),
  ('statements -> statements statement','statements',2,'p_statements','my_parser.py',37),
  ('statement -> PRINTLN LPAREN expression RPAREN SEMI','statement',5,'p_statement_println','my_parser.py',44),
]
